// Code generated by MockGen. DO NOT EDIT.
// Source: ./models/usecases/user.go

// Package mock_usecases is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserUsecases is a mock of UserUsecases interface.
type MockUserUsecases struct {
	ctrl     *gomock.Controller
	recorder *MockUserUsecasesMockRecorder
}

// MockUserUsecasesMockRecorder is the mock recorder for MockUserUsecases.
type MockUserUsecasesMockRecorder struct {
	mock *MockUserUsecases
}

// NewMockUserUsecases creates a new mock instance.
func NewMockUserUsecases(ctrl *gomock.Controller) *MockUserUsecases {
	mock := &MockUserUsecases{ctrl: ctrl}
	mock.recorder = &MockUserUsecasesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserUsecases) EXPECT() *MockUserUsecasesMockRecorder {
	return m.recorder
}

// ChangeUsersBlockStatus mocks base method.
func (m *MockUserUsecases) ChangeUsersBlockStatus(userID int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeUsersBlockStatus", userID)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeUsersBlockStatus indicates an expected call of ChangeUsersBlockStatus.
func (mr *MockUserUsecasesMockRecorder) ChangeUsersBlockStatus(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeUsersBlockStatus", reflect.TypeOf((*MockUserUsecases)(nil).ChangeUsersBlockStatus), userID)
}
